<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Encriptador de Texto</title>
    <link rel="shortcut icon" href="img/favicon.png" type="image/x-icon" />
    <link rel="stylesheet" href="/encrypt.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
</head>
<body>
<div class="container">
    <!-- Título principal -->
    <div class="titulo-principal">
        <h1>Encriptador de Texto</h1>
    </div>

    <!-- Sección de Encriptar -->
    <div class="seccion-encriptar">
        <div class="titulo-seccion">
            <h2>Encriptar</h2>
        </div>

        <!-- Botones de cifrado -->
        <div class="botones-accion">
            <button id="btn-personalizado-encriptar" class="btn-encriptar">Encriptar Personalizado</button>
            <button id="btn-aes-encriptar" class="btn-encriptar">Encriptar AES</button>
            <button id="btn-des-encriptar" class="btn-encriptar">Encriptar DES</button>
        </div>

        <!-- Cuadro de texto y resultado para encriptar -->
        <textarea id="textoEncriptar" placeholder="Texto a encriptar"></textarea>
        <div class="terminos">
            <p>Solo letras minúsculas y sin acentos</p>
        </div>
        <div class="resultado">
            <p id="resultado-encriptar">Resultado de encriptación</p>
        </div>
        <div class="botones-accion">
            <button onclick="copiarEncriptado()" class="btn-copiar">Copiar</button>
        </div>
    </div>

    <!-- Sección de Desencriptar -->
    <div class="seccion-desencriptar">
        <div class="titulo-seccion">
            <h2>Desencriptar</h2>
        </div>

        <!-- Botones de descifrado -->
        <div class="botones-accion">
            <button id="btn-personalizado-desencriptar" class="btn-desencriptar">Desencriptar Personalizado</button>
            <button id="btn-aes-desencriptar" class="btn-desencriptar">Desencriptar AES</button>
            <button id="btn-des-desencriptar" class="btn-desencriptar">Desencriptar DES</button>
        </div>

        <!-- Cuadro de texto y resultado para desencriptar -->
        <textarea id="textoDesencriptar" placeholder="Texto a desencriptar"></textarea>
        <div class="resultado">
            <p id="resultado-desencriptar">Resultado de desencriptación</p>
        </div>
        <div class="botones-accion">
            <button onclick="copiarDesencriptado()" class="btn-copiar">Copiar</button>
        </div>
    </div>
</div>
</body>
</html>


<script>
        // Encriptar personalizado
        function encriptar() {
        const texto = document.getElementById("textoEncriptar").value;

        if (texto.trim() === "") {
        document.getElementById("resultado-encriptar").textContent = "Ingresa texto para encriptar";
        return;
    }

        if (!/^[a-z\s]+$/.test(texto)) {
        document.getElementById("resultado-encriptar").textContent = "Solo se permiten letras minúsculas sin acentos";
        return;
    }

        const textoCifrado = texto
        .replace(/e/g, "enter")
        .replace(/i/g, "imes")
        .replace(/a/g, "ai")
        .replace(/o/g, "ober")
        .replace(/u/g, "ufat");

        document.getElementById("resultado-encriptar").textContent = textoCifrado;
    }

        // Desencriptar personalizado
        function desencriptar() {
        const texto = document.getElementById("textoDesencriptar").value;

        if (texto.trim() === "") {
        document.getElementById("resultado-desencriptar").textContent = "Ingresa texto para desencriptar";
        return;
    }

        const textoDescifrado = texto
        .replace(/enter/g, "e")
        .replace(/imes/g, "i")
        .replace(/ai/g, "a")
        .replace(/ober/g, "o")
        .replace(/ufat/g, "u");

        document.getElementById("resultado-desencriptar").textContent = textoDescifrado;
    }

        function ajustarClave(clave, longitudRequerida) {
            return CryptoJS.enc.Utf8.parse(
                    clave.padEnd(longitudRequerida, "0").substring(0, longitudRequerida)
            );
        }


        // Encriptar con AES
        function encriptarAES(texto, clave) {
        const claveUtf8 = CryptoJS.enc.Utf8.parse(clave);
        const textoCifrado = CryptoJS.AES.encrypt(texto, claveUtf8, {
        mode: CryptoJS.mode.ECB,
        padding: CryptoJS.pad.Pkcs7,
    }).toString();
        return textoCifrado;
    }

        // Desencriptar con AES
        function desencriptarAES(textoCifrado, clave) {
            try {
                const claveAjustada = ajustarClave(clave, 16); // AES-128 usa 16 bytes
                const bytes = CryptoJS.AES.decrypt(textoCifrado, claveAjustada, {
                    mode: CryptoJS.mode.ECB,
                    padding: CryptoJS.pad.Pkcs7,
                });
                const textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);
                if (!textoDescifrado) throw new Error("Texto no válido");
                return textoDescifrado;
            } catch (error) {
                console.error("Error en AES:", error);
                return null;
            }
        }

        function desencriptarDES(textoCifrado, clave) {
            try {
                const claveAjustada = ajustarClave(clave, 8); // DES usa 8 bytes
                const bytes = CryptoJS.DES.decrypt(textoCifrado, claveAjustada, {
                    mode: CryptoJS.mode.ECB,
                    padding: CryptoJS.pad.Pkcs7,
                });
                const textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);
                if (!textoDescifrado) throw new Error("Texto no válido");
                return textoDescifrado;
            } catch (error) {
                console.error("Error en DES:", error);
                return null;
            }
        }


        // Encriptar con DES
        function encriptarDES(texto, clave) {
        const claveUtf8 = CryptoJS.enc.Utf8.parse(clave);
        const textoCifrado = CryptoJS.DES.encrypt(texto, claveUtf8, {
        mode: CryptoJS.mode.ECB,
        padding: CryptoJS.pad.Pkcs7,
    }).toString();
        return textoCifrado;
    }

        // Desencriptar con DES
        function desencriptarDES(textoCifrado, clave) {
            try {
                const claveAjustada = ajustarClave(clave, 8); // DES usa 8 bytes
                const bytes = CryptoJS.DES.decrypt(textoCifrado, claveAjustada, {
                    mode: CryptoJS.mode.ECB,
                    padding: CryptoJS.pad.Pkcs7,
                });
                const textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);
                if (!textoDescifrado) throw new Error("Texto no válido");
                return textoDescifrado;
            } catch (error) {
                console.error("Error en DES:", error);
                return null;
            }
        }

        // Manejo de eventos para botones
        document.getElementById("btn-personalizado-encriptar").addEventListener("click", encriptar);
        document.getElementById("btn-personalizado-desencriptar").addEventListener("click", desencriptar);

        document.getElementById("btn-aes-encriptar").addEventListener("click", () => {
        const texto = document.getElementById("textoEncriptar").value;
        const clave = prompt("Introduce la clave para AES:");
        if (texto.trim() && clave.trim()) {
        const resultado = encriptarAES(texto, clave);
        document.getElementById("resultado-encriptar").textContent = resultado;
    } else {
        alert("Texto y clave no pueden estar vacíos.");
    }
    });

        document.getElementById("btn-aes-desencriptar").addEventListener("click", () => {
            const textoCifrado = document.getElementById("textoDesencriptar").value;
            const clave = prompt("Introduce la clave para AES:");
            if (textoCifrado.trim() && clave.trim()) {
                const resultado = desencriptarAES(textoCifrado, clave);
                if (resultado) {
                    document.getElementById("resultado-desencriptar").textContent = resultado;
                } else {
                    document.getElementById("resultado-desencriptar").textContent = "Error al desencriptar: clave incorrecta o texto inválido.";
                }
            } else {
                document.getElementById("resultado-desencriptar").textContent = "Texto cifrado y clave no pueden estar vacíos.";
            }
        });

        document.getElementById("btn-des-encriptar").addEventListener("click", () => {
        const texto = document.getElementById("textoEncriptar").value;
        const clave = prompt("Introduce la clave para DES:");
        if (texto.trim() && clave.trim()) {
        const resultado = encriptarDES(texto, clave);
        document.getElementById("resultado-encriptar").textContent = resultado;
    } else {
        alert("Texto y clave no pueden estar vacíos.");
    }
    });

        document.getElementById("btn-des-desencriptar").addEventListener("click", () => {
            const textoCifrado = document.getElementById("textoDesencriptar").value;
            const clave = prompt("Introduce la clave para DES:");
            if (textoCifrado.trim() && clave.trim()) {
                const resultado = desencriptarDES(textoCifrado, clave);
                if (resultado) {
                    document.getElementById("resultado-desencriptar").textContent = resultado;
                } else {
                    document.getElementById("resultado-desencriptar").textContent = "Error al desencriptar: clave incorrecta o texto inválido.";
                }
            } else {
                document.getElementById("resultado-desencriptar").textContent = "Texto cifrado y clave no pueden estar vacíos.";
            }
        });
</script>
</body>
</html>