<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/stylepassword.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
    <title>Lista de Contraseñas</title>
</head>
<body>
    <div class="container">
        <h1>Mis Contraseñas</h1>
        <p>Bienvenido, {{username}}. <a href="/logout" class="back">Cerrar sesión</a></p>

        <ul>
            {{#passwords}}
                <li>
                    <span>{{website}}</span>:
                    <span class="password-field" id="password-{{id}}" data-original-password="{{password}}">
                        ********
                    </span>
                    <button type="button" id="toggle-btn-{{id}}" onclick="togglePasswordVisibility('{{id}}')">
                        Mostrar
                    </button>
                    <button type="button" id="encrypt-btn-{{id}}" onclick="toggleEncryption('{{id}}')">Cifrar</button>
                    <div>
                        <form action="/passwords/update/{{id}}" method="get" style="display:inline;">
                            <button type="submit">Cambiar</button>
                        </form>
                        <form action="/passwords/delete" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="{{id}}">
                            <button type="submit">Eliminar</button>
                        </form>
                    </div>
                </li>
            {{/passwords}}
        </ul>

        <a href="/passwords/new">Añadir contraseña</a>
        <br>
        <a href="/" class="back">Volver</a>
    </div>
    <script>
        // Comprobar si el modo oscuro está habilitado en el localStorage
        document.addEventListener('DOMContentLoaded', () => {
            applyDarkMode();
        });

        function applyDarkMode() {
            const isDarkMode = localStorage.getItem('darkMode') === 'true';
            if (isDarkMode) {
                document.body.classList.add('dark-mode');
            }
        }

        function copyPasswordToClipboard(id) {
            const passwordField = document.getElementById(`password-${id}`);
            if (passwordField.textContent !== '********') {
                navigator.clipboard.writeText(passwordField.textContent)
                        .then(() => {
                            alert('Contraseña copiada al portapapeles');
                        })
                        .catch(err => {
                            console.error('Error al copiar la contraseña:', err);
                        });
            } else {
                alert('Primero debes mostrar la contraseña para copiarla.');
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
            // Añadir evento para copiar contraseña al hacer clic
            const passwordFields = document.querySelectorAll('.password-field');
            passwordFields.forEach(field => {
                field.addEventListener('click', (event) => {
                    const id = event.target.id.split('-')[1]; // Extraer el ID del campo
                    copyPasswordToClipboard(id);
                });
            });
        });

        // Funciones de cifrado y descifrado
        function ajustarClave(clave, longitudRequerida) {
            return CryptoJS.enc.Utf8.parse(
                    clave.padEnd(longitudRequerida, "0").substring(0, longitudRequerida)
            );
        }

        function encriptarAES(texto, clave) {
            const claveAjustada = ajustarClave(clave, 16); // AES-128 usa 16 bytes
            const textoCifrado = CryptoJS.AES.encrypt(texto, claveAjustada, {
                mode: CryptoJS.mode.ECB,
                padding: CryptoJS.pad.Pkcs7,
            }).toString();
            return textoCifrado;
        }

        function desencriptarAES(textoCifrado, clave) {
            try {
                const claveAjustada = ajustarClave(clave, 16);
                const bytes = CryptoJS.AES.decrypt(textoCifrado, claveAjustada, {
                    mode: CryptoJS.mode.ECB,
                    padding: CryptoJS.pad.Pkcs7,
                });
                const textoDescifrado = bytes.toString(CryptoJS.enc.Utf8);
                if (!textoDescifrado) throw new Error("Texto no válido");
                return textoDescifrado;
            } catch (error) {
                console.error("Error en AES:", error);
                return null;
            }
        }

        function togglePasswordVisibility(id) {
            const field = document.getElementById(`password-${id}`);
            const btn = document.getElementById(`toggle-btn-${id}`);
            if (field.textContent === "********") {
                field.textContent = field.dataset.originalPassword;
                btn.textContent = "Ocultar";
            } else {
                field.textContent = "********";
                btn.textContent = "Mostrar";
            }
        }

        function toggleEncryption(id) {
            const field = document.getElementById(`password-${id}`);
            const encryptBtn = document.getElementById(`encrypt-btn-${id}`);
            const toggleBtn = document.getElementById(`toggle-btn-${id}`);
            const password = field.dataset.originalPassword;

            if (encryptBtn.textContent === "Cifrar") {
                const clave = prompt("Introduce la clave para cifrar la contraseña:");
                if (clave) {
                    const encrypted = encriptarAES(password, clave);
                    field.dataset.originalPassword = encrypted;
                    field.textContent = "********"; // Mostrar siempre oculta después de cifrar
                    encryptBtn.textContent = "Descifrar";
                    toggleBtn.textContent = "Mostrar"; // Adecuar el botón al estado actual
                    alert("Contraseña cifrada con éxito.");
                }
            } else {
                const clave = prompt("Introduce la clave para descifrar la contraseña:");
                if (clave) {
                    const decrypted = desencriptarAES(field.dataset.originalPassword, clave);
                    if (decrypted) {
                        field.dataset.originalPassword = decrypted;
                        field.textContent = "********"; // Mostrar siempre oculta después de descifrar
                        encryptBtn.textContent = "Cifrar";
                        toggleBtn.textContent = "Mostrar"; // Adecuar el botón al estado actual
                        alert("Contraseña descifrada con éxito.");
                    } else {
                        alert("Error al descifrar. Verifica la clave.");
                    }
                }
            }
        }


    </script>
</body>
</html>